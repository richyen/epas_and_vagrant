# Copyright EnterpriseDB Corporation, 2013-2015. All Rights Reserved.

# Do not use quotes around property values in this file.

# The full license to run failover manager.
efm.license=

# Whether or not failover will happen automatically when the master
# fails. Set to false if you want to receive the failover notifications
# but not have EFM actually perform the failover steps.
# The value of this property must be the same across all agents.
auto.failover=true

# After a standby is promoted, failover manager will attempt to
# update the remaining standbys to use the new master. Failover
# manager will back up recovery.conf, change the host parameter
# of the primary_conninfo entry, and restart the database. The
# restart command is contained in the efm_functions file; default
# is: "pg_ctl restart -m fast -w -t <timeout> -D <directory>"
# where the timeout is the local.timeout property value and the
# directory is specified by db.recovery.conf.dir. To turn off
# automatic reconfiguration, set this property to false.
auto.reconfigure=true

# The value for the password property should be the output from
# 'efm encrypt' -- do not include clear text password here. To
# prevent accidental sharing of passwords among clusters, the cluster
# name is incorporated into the encrypted password. If you change
# the cluster name (the name of this file), you must encrypt the
# password again with the new name.
# The db.port property must be the same for all nodes.
db.user=enterprisedb
db.password.encrypted=4bcdcec94b6e66deec70559f904f7e52
db.port=5432
db.database=edb

# This property controls how many times a database connection is reused
# before creating a new one. If set to zero, a new connection will be
# created every time an agent pings its local database.
db.reuse.connection.count=0

# This property controls the port binding of the administration server
# which is used for some commands (ie cluster-status).
admin.port=5431

# These properties apply to the connection(s) EFM uses to monitor
# the local database. Every 'local.period' seconds, a database check
# is made in a background thread. If the main monitoring thread does
# not see that any checks were successful in 'local.timeout' seconds,
# then the main thread makes a final check with a timeout value
# specified by the 'local.timeout.final' value. All values are in seconds.
# Whether EFM uses single or multiple connections for database checks
# is controlled by the 'db.reuse.connection.count' property.
local.period=10
local.timeout=60
local.timeout.final=10

# Timeout for a call to check if a remote database is responsive.
# For example, this is how long a standby would wait for a
# DB ping request from itself and the witness to the master DB
# before performing failover.
remote.timeout=10

# These properties apply to the jgroups connection between the
# nodes. Description copied from jgroups:
#
# Max tries: Number of times to send an are-you-alive message.
# Timeout (in ms): Timeout to suspect a node P if neither a heartbeat
# nor data were received from P.
#
# The value of these properties must be the same across all agents.
jgroups.max.tries=8
jgroups.timeout=5000

# Email address of the user for notifications. The value of this
# property must be the same across all agents.
user.email=richard.yen@enterprisedb.com

# This property specifies the ip address and port that jgroups
# will bind to on this node. The value is of the form <ip>:<port>.
# Note that the port specified here is used for communicating with
# other nodes, and is not the same as the admin.port above, used
# only to communicate with the local agent to send control signals.
bind.address=127.0.0.1:5430

# Specifies whether or not this is a witness node. Witness nodes
# do not have local databases running.
is.witness=false

# This property tells EFM which OS user owns the $PGDATA dir for the
# 'db.database'.  By default, the owner is either 'postgres' for PostgreSQL
# or 'enterprisedb' for Postgres Plus Advanced Server.  However, if you
# have configured your db to run as a different user, you will need to
# copy the /etc/sudoers.d/efm-XX conf file to grant the
# necessary permissions to your db owner.
#
# This username must have write permission to the 'db.recovery.conf.dir'
# specified below.
db.service.owner=enterprisedb

# Specify the location of the db recovery.conf file on the node. On
# a standby node, the trigger file location is read from the file in
# this directory. After a failover, the recovery.conf files on
# remaining standbys are changed to point to the new master db (a copy
# of the original is made first). On a master node, a recovery.conf file will
# be written during failover and promotion to ensure that the master node can
# not be restarted as the master database.
db.recovery.conf.dir=/var/lib/ppas/9.5/data

# Specify the directory containing the pg_ctl command, for instance:
# /usr/pgsql-9.3/bin. The pg_ctl command is used to restart standby
# databases after a failover so that they are streaming from the new
# master node.
db.bin=/usr/ppas-9.5/bin

# This is the IP and netmask that will be remapped during fail over.  If you do
# not use VIPs as part of your failover solution, then leave these properties
# blank to disable EFM's support for VIP processing (assigning, releasing,
# testing reachability, etc).
#
# If you enable VIP, then all three properties are required.
#
# The address and netmask must be the same across all agents.
# The 'interface' value must contain the secondary virtual ip id (ie ":1", etc).
virtualIp=
virtualIp.interface=
virtualIp.netmask=

# This is the address of a well-known server that EFM can ping in an
# effort to determine network reachability issues.  It might be the IP
# address of a nameserver within your corporate firewall or another server
# that *should* always be reachable via a 'ping' command from each of the
# EFM nodes.
#
# There are many reasons why this node might not be considered reachable:
# firewalls might be blocking the request, ICMP might be filtered out,
# etc.
#
# Do not use the IP address of any node in the EFM cluster (master, standby,
# or witness because this ping server is meant to provide an additional
# layer of information should the EFM nodes lose sight of each other.
#
# The installation default is Google's DNS server.
pingServerIp=8.8.8.8

# This command will be used to test the reachability of certain nodes.
#
# Do not include an IP address or hostname in on the end of this command - it
# will be added dynamically at runtime with the values contained in 'virtualIp'
# and 'pingServer'.
#
# Make sure this command returns reasonably quickly - test it from a shell
# command line first to make sure it works properly.
pingServerCommand=/bin/ping -q -c3 -w5

# Absolute path to fencing script run during promotion
#
# This is an optional user-supplied script that will be run during
# failover on the standby database node.  If left blank, no action will
# be taken.  If specified, EFM will execute this script before promoting
# the standby. The script is run as the efm user.
#
# NOTE: FAILOVER WILL NOT OCCUR IF THIS SCRIPT RETURNS A NON-ZERO EXIT CODE.
script.fence=

# Absolute path to fencing script run after promotion
#
# This is an optional user-supplied script that will be run after
# failover on the standby node after it has been promoted and
# is no longer in recovery. The exit code from this script has
# no effect on failover manager, but will be included in a notification
# sent after the script executes.  The script is run as the efm user.
script.post.promotion=

# Logging levels for JGroups and EFM.
# Valid values are: FINEST, FINER, FINE, CONFIG, INFO, WARNING, SEVERE
# Default value: INFO
# It is not necessary to increase these values unless debugging a specific
# issue. If nodes are not discovering each other at startup, increasing
# the jgroups level to FINER will show information about the TCP connection
# attempts that may help diagnose the connection failures.
jgroups.loglevel=INFO
efm.loglevel=FINEST
